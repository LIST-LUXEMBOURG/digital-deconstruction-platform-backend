/*
 *   Copyright (c) 2022 Luxembourg Institute of Science and Technology
 *   All rights reserved.
 *   For licensing information see the "LICENSE" file in the root directory
 */

import { Project } from '../../project/entities';
import { ProjectLocation } from '../../project/location/entities/projectLocation.entity';
import {
    Entity,
    Column,
    PrimaryGeneratedColumn,
    ManyToOne,
    JoinColumn,
} from 'typeorm';

import { PointOfInterestDto } from '../dto/point-of-interest.dto';

@Entity()
export class PointOfInterest {
    @PrimaryGeneratedColumn('uuid')
    uid: string; // string | generated by platform | automatic | ignored

    @ManyToOne(
        () => Project,
        {
            onDelete: "CASCADE",
        }
    )
    @JoinColumn()
    project: Project;

    @Column({ type: String, nullable: false })
    name: string;

    @Column({ type: String, nullable: true })
    description: string;

    @Column({ type: String, nullable: false })
    poiId: string;

    @Column({ type: String, nullable: false })
    weblink: string;

    // location
    @ManyToOne(() => ProjectLocation, {
        nullable: true,
        cascade: true,
        onDelete: 'SET NULL'
    })
    @JoinColumn({
        name: 'locationId',
        referencedColumnName: 'id',
    })
    location: ProjectLocation;

    //----------------------------------------------------------------------- 

    static toDto(pointOfInterest: PointOfInterest): PointOfInterestDto {
        let dto = new PointOfInterestDto();

        if (!!pointOfInterest) {
            let { project, location, ...fields } = pointOfInterest;

            dto = Object.assign(dto, { ...fields });

            if (!!project) {
                dto.projectId = project.id;
            }

            if (!!location) {
                dto.locationId = location.id;
            }
        }
        return dto;
    }
}
