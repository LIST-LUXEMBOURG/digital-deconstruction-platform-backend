/*
 *   Copyright (c) 2021 Luxembourg Institute of Science and Technology
 *   All rights reserved.
 *   See License in the LICENSE file
 */
import { ApiProperty } from '@nestjs/swagger';
import { Project } from '../../../project/entities';
import {
    Column,
    CreateDateColumn,
    Entity,
    JoinColumn,
    ManyToOne,
    PrimaryColumn,
    PrimaryGeneratedColumn,
    Unique,
} from 'typeorm';
import { ElementType } from './element-type.entity';
import { File } from '../../../file/entities/file.entity';
import { InventoryFileDto } from '../dto/inventory-file.dto';

/*
 *   Copyright (c) 2021 Luxembourg Institute of Science and Technology
 *   All rights reserved.
 *   See License in the LICENSE file
 */
@Entity()
@Unique('unique-inventory-file', ['file'])
export class InventoryFile {
    @PrimaryGeneratedColumn('uuid')
    uid: string; // string | generated by platform | automatic | ignored

    @ManyToOne(
        (type) => Project,
        {
            onDelete: "CASCADE",
        }
    )
    @JoinColumn()
    project: Project;

    @ApiProperty({
        required: false,
        type: String,
        description: 'The inventory-file title',
    })
    @Column({ length: 255, nullable: false })
    title: string;

    @ManyToOne(
        (type) => File,
        { onDelete: "SET NULL", }
    )
    @JoinColumn()
    file: File;

    @ApiProperty({
        required: false,
        type: String,
        description: 'The project-file description (exact match)',
    })
    @Column({ length: 1024, nullable: true })
    description: string;

    @ApiProperty({
        required: false,
        type: String,
        description: 'The document author',
    })
    @Column({ length: 255, nullable: true })
    documentAuthor: string;

    @ApiProperty({
        required: false,
        type: Date,
        description: 'The document date',
    })
    @Column({ nullable: true })
    documentDate: Date;

    @ManyToOne(() => ElementType, (type) => type.files, {
        onDelete: 'CASCADE',
    })
    @JoinColumn()
    elementType: ElementType;

    //----------------------------------------------------------------------- 

    static toDto(inventoryFile: InventoryFile): InventoryFileDto {
        let dto = new InventoryFileDto();

        let { project, elementType, file, ...fields } = inventoryFile;

        dto = Object.assign(dto, fields);

        if (!!project) {
            dto.projectId = project.id;
        }

        if (!!elementType) {
            dto.elementTypeUid = elementType.uid;
        }

        if (!!file) {
            dto.fileUid = file.uuid;
            dto.fileType = file.fileType;
        }

        return dto;
    }
}
